<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ニコキタ教育委員会：ユーザ新規追加</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/stylesheets/account_addition.css">
</head>
<body>
    <header class="header">
        <div class="header-left" id="hambtn">
            <button class="menu-button"  aria-label="メニュー">
                <div class="menu-line"></div>
                <div class="menu-line"></div>
                <div class="menu-line"></div>
            </button>
            <h1>ニコキタ教育委員会：ユーザ新規追加</h1>
        </div>
        <div class="user">
          <% if (name) { %>
              ユーザー：<%= name %>
          <% } else { %>
              ユーザー：guest
          <% } %>
      </div>
    </header>

    <nav class="sidebar" id="sidebar">
      <a href="/admin_main">メインページ</a>
      <a href="/account_list">ユーザー管理</a>
      <a href="javascript:void(0);" onclick="logout()">ログアウト</a>
    </nav>

    <div class="container">
        <h1>ユーザーの新規追加</h1>
        <form id="userForm">
            <div class="form-group">
                <label for="username">ユーザー名：</label>
                <input type="text" id="username" class="input-field" required>
                <div class="error-message" id="username-error">ユーザー名を入力してください</div>
            </div>

            <div class="form-group">
                <label for="user_ID">学籍番号：</label>
                <input type="text" id="user_ID" class="input-field" required>
                <div class="error-message" id="userID-error">学籍番号を入力してください</div>
            </div>

            <div class="form-group">
                <label for="password">パスワード：</label>
                <input type="password" id="password" class="input-field" required>
                <div class="error-message" id="password-error">パスワードを入力してください</div>
            </div>

            <div class="form-group">
                <label for="confirm-password">確認：</label>
                <input type="password" id="confirm-password" class="input-field" required>
                <div class="error-message" id="confirm-error">パスワードが一致しません</div>
            </div>

            <div class="form-group">
                <label>権限：</label>
                <div class="role-options">
                    <div class="role-option" data-role="student">学生</div>
                    <div class="role-option" data-role="teacher">教師</div>
                    <div class="role-option" data-role="admin">管理者</div>
                </div>
                <div class="error-message" id="role-error">権限を選択してください</div>
            </div>

            <div class="button-group">
              <button type="submit" class="btn btn-submit">追加</button>
              <button type="button" class="btn btn-back">戻る</button>
            </div>
        </form>
    </div>

    <script>
        const menuButton = document.getElementById('hambtn');
        const sidebar = document.getElementById('sidebar');

        menuButton.addEventListener('click', () => {
          sidebar.classList.toggle('active');
          mainContent.classList.toggle('sidebar-active');
        });

        document.addEventListener('click', (event) => {
          if (!menuButton.contains(event.target) && !sidebar.contains(event.target)) {
            sidebar.classList.remove('active');
            mainContent.classList.remove('sidebar-active');
            }
        });

        $(document).ready(function() {
            var socket = io();

            // 権限選択
            $('.role-option').click(function() {
                $('.role-option').removeClass('selected');
                $(this).addClass('selected');
                $('#role-error').hide();
                $('#room_select_container').toggle($(this).data('role') === 'teacher');
            });

            // フォームのバリデーション
            $('#userForm').on('submit', function(e) {
                e.preventDefault();
                var isValid = validateForm();

                if (isValid) {
                    var data = gatherFormData();
                    socket.emit('Add_user_manually', data);
                }
            });

            socket.on('Add_user_manually_Complete', function() {
                alert('ユーザーを追加しました！');
                window.location.href = '/account_list';
            });

            // 戻るボタン
            $('.btn-back').click(function() {
                history.back();
            });

            function validateForm() {
                let isValid = true;

                if (!$('#username').val()) {
                    showError('username-error');
                    isValid = false;
                } else {
                    hideError('username-error');
                }

                if (!$('#user_ID').val()) {
                    showError('userID-error');
                    isValid = false;
                } else {
                    hideError('userID-error');
                }

                if (!$('#password').val()) {
                    showError('password-error');
                    isValid = false;
                } else {
                    hideError('password-error');
                }

                if ($('#password').val() !== $('#confirm-password').val()) {
                    showError('confirm-error');
                    isValid = false;
                } else {
                    hideError('confirm-error');
                }

                if (!$('.role-option.selected').length) {
                    showError('role-error');
                    isValid = false;
                } else {
                    hideError('role-error');
                }

                return isValid;
            }

            function showError(errorId) {
                $('#' + errorId).show();
            }

            function hideError(errorId) {
                $('#' + errorId).hide();
            }

            function gatherFormData() {
              var userID = sanitize($('#user_ID').val());
              var username = sanitize($('#username').val());
              var password = sanitize($('#password').val());
              var selectedRole = $('.role-option.selected').data('role');
              
              // Map the selected role to a userType value
              var userType = selectedRole === 'student' ? 1 :
                            selectedRole === 'teacher' ? 2 :
                            selectedRole === 'admin' ? 3 : null;

              var data = { userID, username, password, usertype: userType };

              return data;
          }
            function sanitize(str) {
                return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')
                    .replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g, '&#x2F;');
            }
            
        });

        async function logout() {
            try {
                await new Promise((resolve, reject) => {
                    socket.emit('session_destroy', (response) => response.success ? resolve() : reject(response.error));
                });
                navigateTo('/login');
            } catch (error) {
                alert('ログアウトに失敗しました: ' + error);
            }
        }

        socket.on('session_destroy_success', () => navigateTo('/login'));
        socket.on('session_destroy_failed', (error) => alert('ログアウトに失敗しました: ' + error));
    </script>
</body>
</html>
