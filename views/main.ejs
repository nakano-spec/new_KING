<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ニコキタ教育委員会</title>
    <link rel="stylesheet" href="/stylesheets/main.css">
</head>
<body>
    <script src="/socket.io/socket.io.js"></script>
    <div class="container">
        <header>
            <div class="menu-icon" id="hambtn">
                <div></div>
                <div></div>
                <div></div>
            </div>
            <h1>ニコキタ教育委員会</h1>
            <div class="user">
                <% if (name) { %>
                    ユーザー：<%= name %>
                <% } else { %>
                    ユーザー：guest
                <% } %>
            </div>
        </header>
        
        <nav class="sidebar" id="sidebar">
            <a href="/main">メインページ</a>
            <a href="/mondai">問題出題</a>
            <a href="/question_list">問題管理</a>
            <a href="javascript:void(0);" onclick="logout()">ログアウト</a>
        </nav>

        <main>
            <div class="button-container">
                <button id="post-question-button" class="action-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M12 20h9"></path>
                        <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>
                    </svg>
                    <span>問題出題</span>
                </button>
                <button id="question-list-button" class="action-button">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                        <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
                        <path d="M12 11h4"></path>
                        <path d="M12 16h4"></path>
                        <path d="M8 11h.01"></path>
                        <path d="M8 16h.01"></path>
                    </svg>
                    <span>問題管理</span>
                </button>
            </div>
            <div class="button-space"></div>
            <button id="logout-button" class="logout-button">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                    <polyline points="16 17 21 12 16 7"></polyline>
                    <line x1="21" y1="12" x2="9" y2="12"></line>
                </svg>
                <span>ログアウト</span>
            </button>
        </main>
    </div>

<<<<<<< HEAD
    <script src="/javascripts/main.js"></script>
=======
    <script>
        var socket = io({ transports: ['websocket'], upgrade: false });
        const menuButton = document.getElementById('hambtn');
        const sidebar = document.getElementById('sidebar');

        //セッションチェック三銃士を連れてきたよ。
        window.addEventListener('load',function(){//socket.on呼び出しの専門家　load。「うっす、よろしく」
            socket.emit('checksession',"main.ejs");//現在いるページを引数として送る
        })

        socket.on('session_OK',function(data){//セッションチェック成功の専門家　session_OK。「がんばります、よろしく」
            console.log(data);
        })

        socket.on('session_error',function(data){//セッションチェック失敗の専門家　session_NG。「よっす、どうも」
            console.log(data);
            window.location.href = '/login';//失敗時はログインページに遷移（セッション破棄済み）
        })
        //三銃士ここまで

        menuButton.addEventListener('click', () => {
            sidebar.classList.toggle('active');
            mainContent.classList.toggle('sidebar-active');
        });

        document.addEventListener('click', (event) => {
            if (!menuButton.contains(event.target) && !sidebar.contains(event.target)) {
                sidebar.classList.remove('active');
                mainContent.classList.remove('sidebar-active');
            }
        });

        // ボタンイベント
        document.getElementById('post-question-button').addEventListener('click', function() {
            socket.emit('pageupdate', 1);
        });

        document.getElementById('question-list-button').addEventListener('click', function() {
            socket.emit('pageupdate', 6);
        });

        document.getElementById('logout-button').addEventListener('click', function() {
            socket.emit('logout');
        });

        async function logout() {
            try {
                await new Promise((resolve, reject) => {
                    socket.emit('session_destroy', (response) => {
                        if (response.success) resolve();
                        else reject(response.error);
                    });
                });
                // 成功時はログインページにリダイレクト
                window.location.href = '/login';
            } catch (error) {
                alert('ログアウトに失敗しました: ' + error);
            }
        }

        // サーバー側からの応答
        socket.on('page_updatecomplete', function() {
            window.location.href = '/mondai';
        });

        socket.on('page_update2complete', function() {
            window.location.href = '/account';
        });

        socket.on('page_update3complete', function() {
            window.location.href = '/Question_manage';
        });

        socket.on('logout_complete', function() {
            window.location.href = '/';
        });

        socket.on('session_destroy_success', () => {
            window.location.href = '/login';
        });

        socket.on('session_destroy_failed', (error) => {
            alert('ログアウトに失敗しました: ' + error);
        });
    </script>
>>>>>>> 4697e281144b560788f581128f27b62b4e6ec5e1
</body>
</html>

