<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ニコキタ教育委員会：問題編集</title>
    <link rel="stylesheet" href="/stylesheets/question_edit.css">
</head>
<body>
    <header class="header">
        <div class="menu-icon">
            <span></span>
            <span></span>
            <span></span>
        </div>
        <div>ニコキタ教育委員会：問題編集</div>
        <div>ユーザー：<%= name %></div>
    </header>

    <!-- 右側から出てくる写真パネルボタン -->
    <div class="image-panel-button" id="imagePanelButton">写真</div>

    <!-- 右側からスライドするパネル -->
    <div class="image-panel" id="imagePanel">
        <h2>画像一覧</h2>
        <div class="image-list" id="imageListContainer"></div>
    </div>

    <div id = "zoomback">
        <img id = "zoomimg" src = "">
    </div>


    <main class="main-content">
        <h1 class="title">問題の編集</h1>
        <p class="subtitle">各項目を入力してください。</p>

        <form id="questionForm" method="POST" action="/questions/update">
            <input type="hidden" name="question_ID" value="<%= question.question_ID %>">
            
            <div class="form-group">
                <label class="form-label">問題名：</label>
                <input type="text" class="form-input" name="question_name" value="<%= question.question_name %>" required>
            </div>

            <div class="form-group">
                <label class="form-label">問題文：</label>
                <textarea class="form-input question-text" name="question_text" required><%= question.question_text %></textarea>
            </div>

            <!-- 選択肢セクション -->
            <div id="options-container">
                <% if (question.options) { %>
                    <% const options = question.options.split(', '); %>
                    <% options.forEach((option, index) => { %>
                        <div class="form-group option-group">
                            <label class="form-label">選択肢<%= index + 1 %>：</label>
                            <input type="text" class="form-input" name="options[]" value="<%= option %>" required>
                        </div>
                    <% }); %>
                <% } %>
            </div>

            <button type="button" id="add-option-btn" class="add-option-btn">選択肢を追加</button>
            <p id="error-message" class="error-message"></p>

            <div class="form-group">
                <label class="form-label">写真ファイル名：</label>
                <input type="text" class="form-input" name="pics_name" value="<%= question.pics_name %>">
            </div>

            <div class="form-group">
                <label class="form-label">正解：</label>
                <input type="text" class="form-input" name="correct" value="<%= question.answer %>" required>
            </div>

            <div class="form-group">
                <button type="submit" class="submit-btn">編集完了</button>
            </div>
        </form>
    </main>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io({transports: ['websocket'], upgrade: false});
        // 選択肢追加機能
        const optionsContainer = document.getElementById('options-container');
        const addOptionBtn = document.getElementById('add-option-btn');
        const errorMessage = document.getElementById('error-message');
        const zoom = document.querySelectorAll(".zoom");
        const zoomback = document.getElementById("zoomback");
        const zoomimg = document.getElementById("zoomimg");


        window.addEventListener('load', function(){			
           socket.emit('image_List');		
        });

       // 画像リスト取得後、パネル内に表示
       socket.on('imageList', function(files) {
            console.log('Received image list:', files);
            const imageListContainer = document.getElementById('imageListContainer');
            imageListContainer.innerHTML = ''; // 初期化

            files.forEach(file => {
                const imageItem = document.createElement('div');
                imageItem.classList.add('image-item');

                const img = document.createElement('img');
                img.src = '/images/' + file;
                img.classList.add('zoom')

                const fileName = document.createElement('p');
                fileName.textContent = file; // ファイル名を表示

                imageItem.appendChild(img);
                imageItem.appendChild(fileName);
                imageListContainer.appendChild(imageItem);
            });

            const zoomElements = document.querySelectorAll('.zoom');
            zoomElements.forEach(function(value) {
                value.addEventListener("click", kakudai);
            });
        });

        // サイドパネルの表示非表示
        const imagePanelButton = document.getElementById('imagePanelButton');
        const imagePanel = document.getElementById('imagePanel');
        let panelOpen = false;

        imagePanelButton.addEventListener('click', function() {
            panelOpen = !panelOpen;
            if(panelOpen) {
                imagePanel.classList.add('open');
            } else {
                imagePanel.classList.remove('open');
            }
        });

        zoom.forEach(function(value) {
            value.addEventListener("click",kakudai);
        });

        function kakudai(e) {
            zoomback.style.display = "flex";
            zoomimg.setAttribute("src",e.target.getAttribute("src"));
        }

        zoomback.addEventListener("click",modosu);

        function modosu() {
            zoomback.style.display = "none";
        }

        //選択肢追加処理
        addOptionBtn.addEventListener('click', () => {
            const currentOptions = optionsContainer.querySelectorAll('.option-group');
            if (currentOptions.length >= 10) {
                errorMessage.textContent = '選択肢は最大10個まで追加できます。';
                return;
            }
            errorMessage.textContent = ''; // エラーメッセージをクリア
            const newOptionIndex = currentOptions.length + 1;
            const newOption = document.createElement('div');
            newOption.className = 'form-group option-group';
            newOption.innerHTML = `
                <label class="form-label">選択肢${newOptionIndex}：</label>
                <input type="text" class="form-input" name="options[]" required>
            `;
            optionsContainer.appendChild(newOption);
        });

        // フォーム送信時のアラート
        document.getElementById('questionForm').addEventListener('submit', function(event) {
            alert('編集内容を保存します。');
        });
    </script>
</body>
</html>
