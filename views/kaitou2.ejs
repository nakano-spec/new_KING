<!DOCTYPE html>
<html lang ="ja">
    <head>
        <meta charset="utf-8">
        <title>回答</title>
        <link type="text/css" rel="stylesheet" href="/stylesheets/kaitou2.css">
    </head>
    <body>
        <header class="header">
            <div class="header-title">ニコキタ教育委員会：解答</div>
            <div>ユーザー：<%= name %></div>
        </header>
        <script src ="/socket.io/socket.io.js"></script>
        <h1><%= question_text %></h1>
        <select id="choices">
            <!-- 動的にオプションを作成-->
        </select>
        <div class="buttons">
            <!-- 動的にボタンを生成 -->
        </div>
        <script>
            const urlParams = new URLSearchParams(window.location.search);
            const room_ID = urlParams.get('name');
            const question_text = urlParams.get('question_text');
            const options = JSON.parse(urlParams.get('options'));

            // HTML要素を取得
            const selectBox = document.getElementById("choices");
            const buttonContainer = document.querySelector(".buttons");

            options.sort((a, b) => a.localeCompare(b, 'en', { sensitivity: 'base' }));

            options.forEach(item => {
                // 確実にString型に変換
                const strItem = String(item);

                 // 「:」「：」「；」を「:」に正規化
                const normalizedItem = strItem.replace(/[：；]/g, ":");

                const [left,right] = normalizedItem.split(":")
            
                // セレクトボックスのオプションを追加
                const option = document.createElement("option");
                option.value = left.trim();
                option.textContent = left.trim();
                selectBox.appendChild(option);

                // ボタンを追加
                const button = document.createElement("button");
                button.textContent = right.trim();
                button.value = left.trim(); // ボタンの値に左側を設定
                buttonContainer.appendChild(button);

                // ボタンクリック時の処理
                button.addEventListener("click", () => {
                    alert(`選択肢: ${right.trim()} (値: ${left.trim()})`);
                });
            });

            console.log('name:', name);
            console.log('question_text:', question_text);
            console.log('options:', options);
            /*var socket = io();
            var f = document.forms.myform1;
            var myname = document.getElementById("myid2");
            var m1 = myname.innerText;
            f.kaitou1.addEventListener('click',function(e){
                e.preventDefault();
                let checkvalue = f.elements['hoge'].value;
                socket.emit('kiroku',m1,checkvalue);
            })

            socket.on('insert_error',function(){
                alert("もうすでに回答しています。");
            });

            socket.on('end',function(){
                window.location.href ='/kaitou3?name=' + encodeURIComponent(myname.innerText);
            })*/
        </script>
    </body>
</html>