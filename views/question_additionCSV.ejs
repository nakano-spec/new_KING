<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ニコキタ教育委員会：CSVアップロード</title>
    <link rel="stylesheet" href="/stylesheets/question_additionCSV.css">
</head>
<body>
    <header class="header">
        <div class="menu-icon">
            <span></span>
            <span></span>
            <span></span>
        </div>
        <div>ニコキタ教育委員会：問題編集</div>
        <div>ユーザー：<%= username %></div>
    </header>
    <!--<header class="header">
        <div class="header-left">
            <div class="menu-icon">
                <span></span>
                <span></span>
                <span></span>
            </div>
            <div class="header-title">ニコキタ教育委員会：CSVアップロード</div>
        </div>
    </header> -->
    

    <!-- 右側から出てくる写真パネルボタン -->
    <div class="image-panel-button" id="imagePanelButton">写真</div>

    <!-- 右側からスライドするパネル -->
    <div class="image-panel" id="imagePanel">
        <h2>画像一覧</h2>
        <div class="image-list" id="imageListContainer"></div>
    </div>

    <div id = "zoomback">
        <img id = "zoomimg" src = "">
    </div>

    <main class="main-content">
        <h1 class="title">CSVファイルのアップロード</h1>

        <div class="upload-section">
            <label class="upload-label">アップロードするCSVファイルを選択してください。</label>
            <div class="dropzone" id="csv-dropzone">
                ドラッグ＆ドロップするか、ここをクリックしてファイルを選択
                <input type="file" id="csv-input" accept=".csv" style="display: none;">
            </div>
            <div class="file-list" id="csv-file-list">
                <ul></ul>
            </div>
        </div>

        <div class="upload-section">
            <label class="upload-label">アップロードする写真を選択してください。</label>
            <div class="dropzone" id="photo-dropzone">
                ドラッグ＆ドロップするか、ここをクリックしてファイルを選択
                <input type="file" id="photo-input" accept="image/*" multiple style="display: none;">
            </div>
            <div class="file-list" id="photo-file-list">
                <ul></ul>
            </div>
        </div>
        
        <button id="send-csv-button" style="margin-top: 20px; padding: 10px 20px; background-color: #F47B20; color: white; border: none; border-radius: 5px; cursor: pointer;">
            ファイルを送信
        </button>
    </main>
    <script src="/socket.io/socket.io.js"></script>
    <script>
         const socket = io({transports: ['websocket'], upgrade: false});
         const zoom = document.querySelectorAll(".zoom");
        const zoomback = document.getElementById("zoomback");
        const zoomimg = document.getElementById("zoomimg");


        window.addEventListener('load', function(){			
           socket.emit('image_List');		
        });

       // 画像リスト取得後、パネル内に表示
       socket.on('imageList', function(files) {
            console.log('Received image list:', files);
            const imageListContainer = document.getElementById('imageListContainer');
            imageListContainer.innerHTML = ''; // 初期化

            files.forEach(file => {
                const imageItem = document.createElement('div');
                imageItem.classList.add('image-item');

                const img = document.createElement('img');
                img.src = '/images/' + file;
                img.classList.add('zoom')

                const fileName = document.createElement('p');
                fileName.textContent = file; // ファイル名を表示

                imageItem.appendChild(img);
                imageItem.appendChild(fileName);
                imageListContainer.appendChild(imageItem);
            });

            const zoomElements = document.querySelectorAll('.zoom');
            zoomElements.forEach(function(value) {
                value.addEventListener("click", kakudai);
            });
        });

        // サイドパネルの表示非表示
        const imagePanelButton = document.getElementById('imagePanelButton');
        const imagePanel = document.getElementById('imagePanel');
        let panelOpen = false;

        imagePanelButton.addEventListener('click', function() {
            panelOpen = !panelOpen;
            if(panelOpen) {
                imagePanel.classList.add('open');
            } else {
                imagePanel.classList.remove('open');
            }
        });

        zoom.forEach(function(value) {
            value.addEventListener("click",kakudai);
        });

        function kakudai(e) {
            zoomback.style.display = "flex";
            zoomimg.setAttribute("src",e.target.getAttribute("src"));
        }

        zoomback.addEventListener("click",modosu);

        function modosu() {
            zoomback.style.display = "none";
        }

        //CSVファイルの処理を行うメイン処理
        function setupCSVUpload() {
            const dropzone = document.getElementById('csv-dropzone');
            const input = document.getElementById('csv-input');
            const fileList = document.getElementById('csv-file-list').querySelector('ul');
            const sendButton = document.getElementById('send-csv-button');

            // ドラッグ＆ドロップのイベントリスナー登録
            setupDragAndDrop(dropzone, input, handleFileSelection);

            // ボタンが押されたときの処理
            sendButton.addEventListener('click', sendFileToServer);
        }

        let selectedFile = null; // グローバル変数でファイルを保持

        // ドラッグ＆ドロップ設定
        function setupDragAndDrop(dropzone, input, fileHandler) {
            dropzone.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropzone.classList.add('dragover');
            });

            dropzone.addEventListener('dragleave', () => {
                dropzone.classList.remove('dragover');
            });

            dropzone.addEventListener('drop', (e) => {
                e.preventDefault();
                dropzone.classList.remove('dragover');
                fileHandler(e.dataTransfer.files);
            });

            dropzone.addEventListener('click', () => {
                input.click();
            });

            input.addEventListener('change', () => {
                fileHandler(input.files);
            });
        }

        // ファイルが選択されたときの処理
        function handleFileSelection(files) {
            const fileList = document.getElementById('csv-file-list').querySelector('ul');
            fileList.innerHTML = '';
            if (files.length > 0) {
                selectedFile = files[0]; // 最初のファイルを選択
                const li = document.createElement('li');
                li.textContent = selectedFile.name;
                fileList.appendChild(li);
            }
        }

        // サーバーにファイルを送信
        function sendFileToServer() {
            if (!selectedFile) {
                alert('CSVファイルを選択してください！');
                return;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                const fileContent = e.target.result;
                socket.emit('upload_csv', {
                    fileName: selectedFile.name,
                    content: fileContent,
                });
                alert(`問題を登録しました。`);
            };
            reader.readAsText(selectedFile);
        }

        // 初期化
        setupCSVUpload();

    </script>
</body>
</html>
