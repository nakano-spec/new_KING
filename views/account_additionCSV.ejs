<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ニコキタ教育委員会：ユーザ新規追加</title>
    <link rel="stylesheet" href="/stylesheets/account_additionCSV.css">
</head>
<body>
    <header class="header">
        <div class="header-left">
            <button class="menu-button" aria-label="メニュー">
                <div class="menu-line"></div>
                <div class="menu-line"></div>
                <div class="menu-line"></div>
            </button>
            <h1 class="header-title">ニコキタ教育委員会：ユーザ新規追加</h1>
        </div>
        <div class="header-user">ユーザー：Admin</div>
    </header>

    <main class="main-content">
        <h2 class="page-title">CSVファイルでユーザーを追加</h2>
        <!--<a href="account_additionCSVExplanation" class="help-link">詳しい追加方法はこちら</a> -->
        <button id="downloadButton">テンプレートをダウンロード</button>

        <p class="upload-instructions">アップロードするCSVファイルを選択してください。</p>

        <div id="dropZone" class="file-upload-area">
            <div class="file-upload-text">
                ここにCSVファイルをドラッグ＆ドロップ
                <br>
                または
            </div>
            <div class="file-input-wrapper">
                <label class="file-input-button">
                    ファイルを選択
                    <input type="file" id="fileInput" accept=".csv" style="display: none;">
                </label>
                <span id="fileName" class="file-name">選択されていません</span>
            </div>
        </div>

        <div class="button-container">
            <button id="upload_button" class="btn btn-submit" disabled>追加</button>
            <button class="btn btn-back" onclick="history.back()">戻る</button>
        </div>
    </main>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io();
        const dropZone = document.getElementById('dropZone');
        const fileInput = document.getElementById('fileInput');
        const fileName = document.getElementById('fileName');
        const uploadButton = document.getElementById('upload_button');

        const downloadButton = document.getElementById('downloadButton');

        downloadButton.addEventListener('click', () => {
            // サーバーにファイル送信リクエストを送る
            socket.emit('requestFile');
        });

        // サーバーからデータを受信
        socket.on('fileData', (file) => {
            const blob = new Blob([file.data], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);

            // ダウンロードリンクを生成してクリック
            const a = document.createElement('a');
            a.href = url;
            a.download = file.fileName; // ファイル名指定
            document.body.appendChild(a);
            a.click();

            // 後片付け
            window.URL.revokeObjectURL(url);
            document.body.removeChild(a);
        });

        // エラーハンドリング
        socket.on('fileError', (message) => {
            alert(message);
        });

        // ドラッグ＆ドロップエリアのイベントハンドラ
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('dragover');
        });

        dropZone.addEventListener('dragleave', (e) => {
            e.preventDefault();
            dropZone.classList.remove('dragover');
        });

        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('dragover');
            handleFiles(e.dataTransfer.files);
        });

        // クリックでファイル選択
        fileInput.addEventListener('change', (e) => {
            handleFiles(e.target.files);
        });

        function handleFiles(files) {
            if (files.length === 0) return;

            const file = files[0];
            if (file.type === 'text/csv' || file.name.endsWith('.csv')) {
                fileName.textContent = file.name;
                uploadButton.disabled = false;

                uploadButton.addEventListener('click', () => {
                    const reader = new FileReader();
                    reader.onload = function(event) {
                        socket.emit('file_upload', { fileName: file.name, data: event.target.result });
                    };
                    reader.onerror = function() {
                        alert("ファイルの読み込みに失敗しました。");
                    };
                    reader.readAsText(file);
                });
            } else {
                alert('CSVファイルのみアップロード可能です。');
                fileName.textContent = '選択されていません';
                uploadButton.disabled = true;
            }
        }

        // アップロード完了通知
        socket.on('file_upload_Complete', () => {
            alert('ファイルが正常にアップロードされました。');
            window.location.href = '/account_list';
        });
    </script>
</body>
</html>
