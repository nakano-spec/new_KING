<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ニコキタ教育委員会：問題出題</title>
    <link type="text/css" rel="stylesheet" href="/stylesheets/mondai2.css">
    <style>
        body {
            font-family: sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        .header {
            background-color: #F47B20;
            color: white;
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .hamburger {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            width: 24px;
            height: 18px;
            background: none;
            border: none;
            cursor: pointer;
        }
        .hamburger div {
            width: 24px;
            height: 2px;
            background-color: white;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 1.5rem;
        }
        .button {
            background-color: #e0e0e0;
            border: none;
            padding: 0.5rem 1rem;
            cursor: pointer;
            border-radius: 4px;
        }
        .button:hover {
            background-color: #d0d0d0;
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        label {
            display: block;
            margin-bottom: 0.5rem;
            font-size: 1.125rem;
        }
        select, input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        .flex {
            display: flex;
            gap: 1rem;
            align-items: center;
        }
        .submit-button {
            background-color: #FFA500;
            color: black;
            font-weight: bold;
            font-size: 1.125rem;
            padding: 1rem 3rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .submit-button:hover {
            background-color: #FF8C00;
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="flex">
            <button class="hamburger" id="hambtn">
                <div></div>
                <div></div>
                <div></div>
            </button>
            <h1 style="margin-left: 1rem;">ニコキタ教育委員会：問題出題</h1>
        </div>
        <div>ユーザー：<%= name %></div>
    </header>

    <main class="container">
        <div style="text-align: right; margin-bottom: 2rem;">
            <button class="button" id="add-problem">問題の新規追加</button>
        </div>

        <form name="f1" style="max-width: 768px; margin: 0 auto;">
            <div class="form-group">
                <label for="qualification-select">試験名を選択してください。</label>
                <select id="qualification-select" name="mo1" class="cp_sl02" required>
                    <option value="">(試験名を選択)</option>
                    <% web.forEach((list) => { %>
                        <option><%= list.qualification_name %></option>
                    <% }) %>
                </select>
            </div>

            <div class="form-group">
                <label for="year-select">年度を選択してください。</label>
                <select id="year-select" name="year" class="cp_sl02">
                    <option value="">(年度を選択)</option>
                    <% web.forEach((list) => { %>
                        <option><%= list.question_years %></option>
                    <% }) %>
                </select>
            </div>

            <div class="form-group">
                <label for="question-select">問題を選択してください。</label>
                <select id="question-select" name="question" class="cp_sl02" required>
                    <option value="">(問題を選択)</option>
                    <% web.forEach((list) => { %>
                        <option><%= list.question_name %></option> 
                    <% }) %>
                </select>
            </div>

            <div class="form-group">
                <label for="genre-select">ジャンルを選択してください。</label>
                <select id="genre-select" name="genre" class="cp_sl02">
                    <option value="">(ジャンルを選択)</option>
                    <% web.forEach((list) => { %>
                        <option><%= list.question_genre %></option>
                    <% }) %>
                </select>
            </div>

            <div class="form-group">
                <label>回答の正否判定の仕方を選択してください。</label>
                <div>
                    <input type="radio" name="hantei" value="自動">自動
                    <input type="radio" name="hantei" value="手動">手動
                </div>
            </div>

            <div class="form-group">
                <label>制限時間を秒単位で入力してください。</label>
                <input id="time2" type="number" name="byou" min="1" max="3600" placeholder="秒">
            </div>

            <div style="text-align: right; margin-top: 2rem;">
                <button type="submit" class="submit-button" name="okuru">出題する</button>
            </div>
            <button style="height: 50px; width: 50px;"onclick="window.location.href='/main'">メイン画面に戻る
        </form>
    </main>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const form = document.forms.f1;
        const questionSelect = document.getElementById('question-select');
        const menuButton = document.getElementById('menu-button');
        const menuDropdown = document.getElementById('menu-dropdown');
        let hanteiFlag = false;
        let hanteiValue = '';

        // メニューの表示・非表示
        menuButton.addEventListener('click', () => {
            menuDropdown.classList.toggle('active');
        });

        document.addEventListener('click', (event) => {
            if (!menuButton.contains(event.target)) {
                menuDropdown.classList.remove('active');
            }
        });

        // 出題ボタンのクリックイベント
        form.okuru.addEventListener('click', function(e) {
            e.preventDefault();
            for (let radio of form.hantei) {
                if (radio.checked) {
                    hanteiFlag = true;
                    hanteiValue = radio.value;
                }
            }
            if (!hanteiFlag) {
                alert("採点形式が選択されていません。");
                return;
            }

            const timeLimit = form.time2.value;
            if (!timeLimit || isNaN(timeLimit)) {
                alert("制限時間が入力されていません。");
                return;
            }

            socket.emit('search_room');
        });

        form.kakunin.addEventListener('click', function(e) {
            e.preventDefault();
            const params = new URLSearchParams({
                qualificationName: form.mo1.value,
                year: form.year.value,
                questionName: form.question.value,
                genre: form.genre.value
            }).toString();
            window.location.href = "/kakunin?" + params;
        });

        form.tuika.addEventListener('click', function(e) {
            e.preventDefault();
            window.location.href = "/tuika";
        });

        socket.on('room_IDget', function(room_ID) {
            const questionIndex = questionSelect.selectedIndex;
            const selectedQuestion = questionSelect.options[questionIndex].innerText;
            const newWin = open("/hyouji2");
            socket.emit('mondai_btnclick', selectedQuestion, hanteiValue, room_ID);
        });

        socket.on('mondai_kekka', function(flag) {
            const time = form.time2.value;
            if (flag === 1) {
                window.location.href = '/mondai2?byou=' + encodeURIComponent(time);
            } else {
                window.location.href = '/hello';
            }
        });

        function sanitize(str) {
            return String(str)
                .replace(/&/g, '&amp;')
                .replace(/</g, '&lt;')
                .replace(/>/g, '&gt;')
                .replace(/"/g, '&quot;')
                .replace(/'/g, '&#x27;')
                .replace(/\//g,'&#x2F;')
                .replace(/:/g, '')
                .replace(/;/g, '')
                .replace(/\*/g, '');
        }

        // ソケットイベントを用いたセレクトボックスの動的更新
        function updateSelect(selectId, data, property) {
            const select = document.getElementById(selectId);
            select.innerHTML = '';
            data.forEach(item => {
                const option = document.createElement('option');
                option.textContent = item[property];
                select.appendChild(option);
            });
        }

        socket.on('qualificationData', function(data) {
            updateSelect('year-select', data, 'question_years');
            updateSelect('question-select', data, 'question_name');
            updateSelect('genre-select', data, 'question_genre');
        });

        socket.on('questionname', function(data) {
            updateSelect('question-select', data, 'question_name');
            updateSelect('genre-select', data, 'question_genre');
        });

        socket.on('questiongenre', function(data) {
            updateSelect('genre-select', data, 'question_genre');
        });
    </script>
</body>
</html>

